plugins {
    id 'com.github.johnrengelman.shadow'
    id "org.jetbrains.kotlin.jvm" version "2.0.0"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
    maven { url = 'https://thedarkcolour.github.io/KotlinForForge/' }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    // see: https://github.com/thedarkcolour/KotlinForForge/issues/103
    implementation("thedarkcolour:kotlinforforge-neoforge:$rootProject.kotlin_for_forge_version") {
        exclude group: "net.neoforged.fancymodloader", module: "loader"
    }

    // Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    modImplementation "com.cobblemon:neoforge:$rootProject.cobblemon_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:2.0.0"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
    
    // runtimeOnly fg.deobf("curse.maven:simpletms-tms-and-trs-for-cobblemon-959184:${simpletms_version}")
    // runtimeOnly fg.deobf("curse.maven:pkgbadges-889895:${pkgbadges_version}")
    // runtimeOnly fg.deobf("curse.maven:patchouli-306770:${patchouli_version}")
    // runtimeOnly fg.deobf("curse.maven:cobblepedia-850946:${cobblepedia_version}")
    // runtimeOnly fg.deobf("curse.maven:configured-457570:${configured_version}")
    // runtimeOnly fg.deobf("mezz.jei:jei-${jei_mc_version}-forge:${jei_version}")

    // TODO: this is temporary until rctapi is available on (curse)maven
    modImplementation files("../libs/rctapi-neoforge-${rctapi_version}.jar")
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
